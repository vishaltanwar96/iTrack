"""
Django settings for itrack project.

Generated by 'django-admin startproject' using Django 2.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from configparser import ConfigParser

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
RESOURCES_DIR = os.path.join(os.path.dirname(BASE_DIR), "resources")
ITRACK_ENV = os.environ.get("ITRACK_ENV", "development")

if not os.path.exists(RESOURCES_DIR):
    os.makedirs(RESOURCES_DIR)

conf_file_path = os.path.join(RESOURCES_DIR, f"{ITRACK_ENV}.ini")
if not os.path.exists(conf_file_path):
    raise FileNotFoundError(f"{conf_file_path} not found...Aborting!")

CONFIG = ConfigParser()
CONFIG.read(conf_file_path)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = CONFIG.get("DEFAULT", "SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = CONFIG.getboolean("DEFAULT", "DEBUG")

ALLOWED_HOSTS = ["*"]


AUTH_USER_MODEL = "user.User"

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "corsheaders",
    "project",
    "shared",
    "task",
    "user",
    "todos",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "itrack.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "itrack.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": CONFIG.get("DATABASE", "NAME"),
        "HOST": CONFIG.get("DATABASE", "HOST"),
        "PORT": CONFIG.get("DATABASE", "PORT"),
        "USER": CONFIG.get("DATABASE", "USER"),
        "PASSWORD": CONFIG.get("DATABASE", "PASSWORD"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
    {
        "NAME": "itrack.password_validation.UpperCaseValidator",
    },
    {
        "NAME": "itrack.password_validation.LowerCaseValidator",
    },
    {
        "NAME": "itrack.password_validation.DigitValidator",
    },
    {
        "NAME": "itrack.password_validation.SpecialCharacterValidator",
    },
]

REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 15,
}

# Email Settings
EMAIL_HOST = CONFIG.get("EMAIL", "EMAIL_HOST")
EMAIL_PORT = CONFIG.get("EMAIL", "EMAIL_PORT")
EMAIL_HOST_USER = CONFIG.get("EMAIL", "EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = CONFIG.get("EMAIL", "EMAIL_HOST_PASSWORD")
EMAIL_USE_TLS = CONFIG.get("EMAIL", "EMAIL_USE_TLS")
DEFAULT_FROM_EMAIL = CONFIG.get("EMAIL", "EMAIL_ADDRESS_FOR_NOTIFICATIONS")

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Kolkata"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = "/static/"
